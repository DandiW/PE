{\rtf1\ansi\ansicpg1252\cocoartf1265\cocoasubrtf210
{\fonttbl\f0\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl380

\f0\fs32 \cf0 \cb2 #problem 1\
\
\
a = sum\
\
a= sum  ([i for i in range(1000) if (i % 3 == 0 or i % 5 == 0)])\
\
print a\
\
#problem 2\
\
\
\
def fibonacci(n):\
    """\
    Compute the nth Fibonacci number in closed form.\
    """\
    p = (1+5.0**(0.5))/2.0\
    return int((p**n)/(5**(0.5)) + 0.5)\
\
i = 3\
s = 0\
\
\
while True:\
    f = fibonacci(i)\
    if f > 4000000: break\
    s += f\
    i += 3\
\
\
print s\
\
#problem 3\
import time\
\
def largest_prime_factor(n):\
\
    largest_factor = 1\
\
    # remove any factors of 2 first\
    while n % 2 == 0:\
        largest_factor = 2\
        n = n/2\
 \
    # now look at odd factors\
    p = 3\
    while n != 1:\
        while n % p == 0:\
            largest_factor = p\
            n = n/p\
        p = p + 2\
\
    return largest_factor\
\
#   Problem 6\
\
import time\
\
def square_of_sum(n):\
    sum = ((n+1)*n)/2\
    squared = sum**2\
    return squared\
\
def sum_of_squares(n):\
    sum = 0\
    for i in range(n + 1):\
        sum += i**2\
    return sum\
    \
def difference(n):\
    return square_of_sum(n) - sum_of_squares(n)\
    \
start = time.time()\
diff = difference(100)\
elapsed = (time.time() - start)\
\
print "result %s returned at %s seconds." % (diff,elapsed)\'a0}